@model TravianTelegramBot.ViewModels.RegisterViewModel

@{
    ViewData["Title"] = "Register";
    var canRegister = string.IsNullOrEmpty(ViewData["Token"]?.ToString());
    var readonlyAttr = canRegister ? "disabled" : string.Empty;
}

<h2>@ViewData["Title"]</h2>

@if (canRegister)
{
    <span class="text-danger">No token provided. Most probably you've got this URL not from Telegram Bot. Please use the bot to get correct URL.</span>
}
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Register">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="Token" type="hidden" value="@ViewData["Token"]" />
            <div class="form-group">
                <label asp-for="UserName" class="control-label"></label>
                <input asp-for="UserName" class="form-control" />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ConfirmPassword" class="control-label"></label>
                <input asp-for="ConfirmPassword" class="form-control" />
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SecretCode" class="control-label"></label>
                <input asp-for="SecretCode" class="form-control" />
                <span asp-validation-for="SecretCode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Register" class="btn btn-primary" @readonlyAttr />
            </div>
        </form>
    </div>
</div>

